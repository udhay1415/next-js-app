{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/udhay/Projects/udhay/advanced-web-dev/next-js-app/pages/about.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar About = function About(props) {\n  console.log(props);\n  return (// <div>About page</div>\n    __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }\n    }, props.names.map(function (name) {\n      return __jsx(\"li\", {\n        id: name.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }\n      }, name.name);\n    }))\n  );\n};\n\nAbout.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            names: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default About;","map":{"version":3,"sources":["/Users/udhay/Projects/udhay/advanced-web-dev/next-js-app/pages/about.js"],"names":["fetch","About","props","console","log","names","map","name","id","getInitialProps","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,aACpB;AAAI,QAAA,EAAE,EAAEA,IAAI,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBD,IAAI,CAACA,IAAvB,CADoB;AAAA,KAApB,CAFR;AAFJ;AAUH,CAZD;;AAgBAN,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFT,KAAK,CAAC,4CAAD,CADH;;AAAA;AACdU,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAAA,2CAGb;AAAEP,YAAAA,KAAK,EAAEO;AAAT,WAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeX,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst About = (props) => {\n    console.log(props)\n    return (\n        // <div>About page</div>\n        <div>\n            {\n                props.names.map(name => (\n                <li id={name.id}>{name.name}</li>\n                ))\n            }\n        </div>   \n    )\n}\n    \n\n\nAbout.getInitialProps = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await res.json()\n    return { names: data }\n}\n\nexport default About"]},"metadata":{},"sourceType":"module"}